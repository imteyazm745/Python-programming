Variable:  
A variable is basically nothing but the name of a memory location that we use for storing data. We can change the value of a variable in C or any other language, and we can also reuse it multiple times.

Creating a Variable:  
checkingAccount = 500
savingsAccount = 1000

# add 100 to our savings (Yeah!)
savingsAccount = savingsAccount + 100

# remove 50 from our checkingaccount (Sniff)
checkingAccount = checkingAccount - 50

# calculate the number of days to save to reach 5000
numberDaysSave = (5000 - checkingAccount) / 500

# update our checkingaccount (again) after the daily gains/losses
checkingAccount = checkingAccount + (30 - 10) * 7
Lines starting with a # are comments. They are used to document your code and help others understand it.
The other lines of code (which can run operations, declarations, etc.) are expressions. They tell the computer what to do.
each of the expressions assigns a value to a variable. The assignment operator is   = .
To the right of the assignment operator is the expression that will create/calculate a value.
To the left of the assignment operator, you write the name of the variable to which you will assign the corresponding value.

There are also other arithmetic operators that are a little more complex, but nevertheless useful, such as:
% modulo : returns the remainder of the euclidean division
** power : raises a number to a certain power
// integer division: calculates the integer division (rounded down)
print(SavingsAccount % 500) # -> 100
# 1100 = 500 * 2 + 100, so 1100 % 500 = remainder = 100
print(9 ** 3) # -> 729, 9*9*9 = 729
print(SavingsAccount // 500) # -> 2
# 1100 = 500 * 2 + 100, so 1100 // 500 = integer division result = 2*
Shorter Code
# long version
savingsAccount = savingsAccount + 100

# equivalent short version
savingsAccount += 100
Naturally, there is a version for each arithmetic operator seen previously:
-=  for subtraction
*=  for multiplication
/=  for division
%=  for the remainder of the integer division

Let's Recap
In this chapter, you have learned the basics about variables:
A variable is made up of two parts: its name and its value.
Assigning a value to a variable is called an assignment.
The value of a variable can be changed.
The type of a variable depends on its value.
The names of your variables should be clear, explicit, and should follow a typographic convention.

Mix Several Numeric Variables
a = 7.5
b = 3
c = a/b
print(c)
# this will print 2.5, which is a float
a = 10
b = 5
c = a/b
print(c)
# it's a float

Concatenation:
However, you can force the conversion of a variable into a well-defined type. This is called typecasting because by doing so you are changing (casting) the type of a variable. To do this, you will need the corresponding functions:
a = 14.0
# a is a float
a = int(a)
print(a)
# a is now an integer: it prints 14 and not 14.0

Character Strings:
character strings are string types in Python, assembling several strings together is called concatenation. 

favoriteCityOne = "San Francisco"
favoriteCityTwo = "New York"
favorites = favoriteCityOne + favoriteCityTwo
print(favorites) # => "San FranciscoNew York"
favorites1 = "My favorite cities are " + favoriteCityOne + " and "+ favoriteCityTwo
print(favorites1) # -> "My favorite cities are San Francisco and New York"

However, you cannot concatenate other types of variables with strings, such as numeric variables---this would return an error. To remedy this, you will need to cast your numeric variable to a string, via the  str()  function:

city = "Sydney"
numberTrips = 5
history = "I've been to " + city + " " + str(numberTrips) + " times "
print(history) # => "I've been to Sydney 5 times"

